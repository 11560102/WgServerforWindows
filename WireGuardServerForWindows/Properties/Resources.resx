<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="PrivateKeyProperty" xml:space="preserve">
    <value>Private Key</value>
  </data>
  <data name="PrivateKeyPropertyAction" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="ListenPortProperty" xml:space="preserve">
    <value>Listen Port</value>
  </data>
  <data name="AddressProperty" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="PropertyNameFormat" xml:space="preserve">
    <value>{0}:</value>
    <comment>{0} is the name of the property</comment>
  </data>
  <data name="KeyValidationError" xml:space="preserve">
    <value>Key must not be empty</value>
  </data>
  <data name="PortRangeValidationError" xml:space="preserve">
    <value>Port must be between 0 and 65535.</value>
  </data>
  <data name="PortValidationError" xml:space="preserve">
    <value>Port must be numerical.</value>
  </data>
  <data name="NetworkAddressValidationError" xml:space="preserve">
    <value>Network must be in valid CIDR notation. For example: 192.168.1.0/24</value>
  </data>
  <data name="ValidationErrorFormat" xml:space="preserve">
    <value>{0}
    
Current value: {1}

{2}</value>
    <comment>{0} is the description. {1} is the current value. {2} is the validation error, shown on a separate line.</comment>
  </data>
  <data name="PropertyFormat" xml:space="preserve">
    <value>{0}
    
Current value: {1}</value>
    <comment>{0} is the description. {1} is the current value.</comment>
  </data>
  <data name="ServerConfiguration" xml:space="preserve">
    <value>Server Configuration</value>
  </data>
  <data name="ClientConfigurations" xml:space="preserve">
    <value>Client Configuration(s)</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ServerConfigurationSuccessMessage" xml:space="preserve">
    <value>Server configuration file (.conf) found.</value>
  </data>
  <data name="ClientConfigurationsSuccessMessage" xml:space="preserve">
    <value>One or more clients is configured.</value>
  </data>
  <data name="ServerConfigurationMissingErrorMessage" xml:space="preserve">
    <value>Server configuration file (.conf) not found.</value>
  </data>
  <data name="ServerConfigurationResolveText" xml:space="preserve">
    <value>Create and edit server configuration</value>
  </data>
  <data name="ClientConfigurationsMissingErrorMessage" xml:space="preserve">
    <value>No client(s) configured.</value>
  </data>
  <data name="ClientConfigurationsResolveText" xml:space="preserve">
    <value>Configure client(s)</value>
  </data>
  <data name="ServerConfigurationConfigureText" xml:space="preserve">
    <value>Edit server configuration</value>
  </data>
  <data name="ServerConfigurationIncompleteErrorMessage" xml:space="preserve">
    <value>Server configuration not completed. Some fields are missing or incorrect.</value>
  </data>
  <data name="ClientConfigurationsIncompleteErrorMessage" xml:space="preserve">
    <value>One or more clients has missing or incorrect configuration.</value>
  </data>
  <data name="TunnelService" xml:space="preserve">
    <value>Tunnel Service</value>
  </data>
  <data name="TunnelServiceInstalled" xml:space="preserve">
    <value>Tunnel service installed.</value>
  </data>
  <data name="TunnelServiceNotInstalled" xml:space="preserve">
    <value>Tunnel service not installed.</value>
  </data>
  <data name="InstallTunnelService" xml:space="preserve">
    <value>Install tunnel service</value>
  </data>
  <data name="UninstallTunnelService" xml:space="preserve">
    <value>Uninstall tunnel service</value>
  </data>
  <data name="WireGuardExe" xml:space="preserve">
    <value>WireGuard.exe</value>
  </data>
  <data name="WireGuardExeFound" xml:space="preserve">
    <value>Found WireGuard.exe in PATH.</value>
  </data>
  <data name="WireGuardExeNotFound" xml:space="preserve">
    <value>WireGuard.exe is not found in the PATH. It must be downloaded and installed.</value>
  </data>
  <data name="InstallWireGuard" xml:space="preserve">
    <value>Download and install WireGuard</value>
  </data>
  <data name="UninstallWireGuard" xml:space="preserve">
    <value>Uninstall WireGuard</value>
  </data>
  <data name="EmptyClientNameError" xml:space="preserve">
    <value>Client must have a name</value>
  </data>
  <data name="ClientConfiguration" xml:space="preserve">
    <value>Client Configuration</value>
  </data>
  <data name="NameProperty" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AddClient" xml:space="preserve">
    <value>Add Client</value>
  </data>
  <data name="DeleteAction" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="ConfirmDeleteClient" xml:space="preserve">
    <value>Are you sure you want to delete the client?</value>
  </data>
  <data name="Confirm" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="PublicKeyProperty" xml:space="preserve">
    <value>Public Key</value>
  </data>
  <data name="PublicKeyPropertyAction" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="PresharedKeyProperty" xml:space="preserve">
    <value>Preshared Key</value>
  </data>
  <data name="PresharedKeyPropertyAction" xml:space="preserve">
    <value>Generate</value>
  </data>
  <data name="ClientPresharedKeyPropertyAction" xml:space="preserve">
    <value>Populate from Server</value>
  </data>
  <data name="AllowedIpsProperty" xml:space="preserve">
    <value>Allowed IPs</value>
  </data>
  <data name="GenerateFromServerAction" xml:space="preserve">
    <value>Generate from Server</value>
  </data>
  <data name="Undefined" xml:space="preserve">
    <value>UNDEFINED</value>
  </data>
  <data name="GenerateClientAddressActionDescription" xml:space="preserve">
    <value>Generate an IP in the range defined by the server address (currently: {0})</value>
    <comment>{0} is the IP of the server</comment>
  </data>
  <data name="DnsProperty" xml:space="preserve">
    <value>DNS</value>
  </data>
  <data name="EndpointProperty" xml:space="preserve">
    <value>Endpoint
(Public IP:Port)</value>
  </data>
  <data name="EmptyEndpointValidation" xml:space="preserve">
    <value>Enter public IP:Port as endpoint.</value>
  </data>
  <data name="EndpointPortMismatch" xml:space="preserve">
    <value>Endpoint port should match Listen Port property.</value>
  </data>
  <data name="GenerateQrCodeAction" xml:space="preserve">
    <value>Generate QR Code</value>
  </data>
  <data name="ExportConfigurationFileAction" xml:space="preserve">
    <value>Export Configuration File</value>
  </data>
  <data name="ClientConfigurationTitle" xml:space="preserve">
    <value>'{0}' Client Configuration</value>
    <comment>{0} is the client configuration name</comment>
  </data>
  <data name="ServerStatus" xml:space="preserve">
    <value>Server Status</value>
  </data>
  <data name="UpdateLive" xml:space="preserve">
    <value>Update Live</value>
  </data>
  <data name="PrivateNetworkTitle" xml:space="preserve">
    <value>Private Network</value>
  </data>
  <data name="PrivateNetworkSuccess" xml:space="preserve">
    <value>Network is private and will allow sharing.</value>
  </data>
  <data name="PrivateNetworkError" xml:space="preserve">
    <value>Network is currently public, meaning that some important protocols and ports will be blocked.</value>
  </data>
  <data name="PrivateNetworkResolve" xml:space="preserve">
    <value>Make private</value>
  </data>
  <data name="PrivateNetworkConfigure" xml:space="preserve">
    <value>Revert back to public</value>
  </data>
  <data name="InternetSharingTitle" xml:space="preserve">
    <value>Internet Sharing</value>
  </data>
  <data name="InternetSharingSuccess" xml:space="preserve">
    <value>Internet Sharing is enabled.</value>
  </data>
  <data name="InternetSharingError" xml:space="preserve">
    <value>Internet Sharing is not enabled, connected peers will have no network access.</value>
  </data>
  <data name="InternetSharingResolve" xml:space="preserve">
    <value>Enable Internet Sharing</value>
  </data>
  <data name="InternetSharingConfigure" xml:space="preserve">
    <value>Disable Internet Sharing</value>
  </data>
  <data name="PersistentInternetSharingTitle" xml:space="preserve">
    <value>Persistent Internet Sharing</value>
  </data>
  <data name="PersistentInternetSharingSucecss" xml:space="preserve">
    <value>Persistent internet sharing has been enabled. Note that this is not a perfect solution, and occasionally internet sharing must be re-enabled after reboot.</value>
  </data>
  <data name="PersistentInternetSharingError" xml:space="preserve">
    <value>Persistent internet sharing is not enabled. The WireGuard tunnel may lose network access after a reboot.</value>
  </data>
  <data name="PersistentInternetSharingResolve" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="PersistentInternetSharingDisable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="ServerAllowedIpsDescription" xml:space="preserve">
    <value>Specify which IPs will be routed from the client to the server. Use 0.0.0.0/0 to route everything. Optionally specify multiple routes, separated by commas, like 10.0.0.0/8, 192.168.1.0/24</value>
  </data>
  <data name="ClientAddressValidationError" xml:space="preserve">
    <value>Client address must be a single IP address, such as 10.232.0.2 or 10.232.0.2/32</value>
  </data>
  <data name="DnsAddressValidationError" xml:space="preserve">
    <value>DNS address(es) must be valid IPs, such as 8.8.8.8</value>
  </data>
  <data name="PersistentKeepaliveValidationError" xml:space="preserve">
    <value>Persistent Keepalive must have a numerical value. Use 0 to disable the feature.</value>
  </data>
  <data name="PersistentKeepaliveProperty" xml:space="preserve">
    <value>Persistent Keepalive</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="SelectInterfaceTitle" xml:space="preserve">
    <value>Select Interface</value>
  </data>
  <data name="SelectInterfaceText" xml:space="preserve">
    <value>Choose the public network interface whose internet connection should be shared with the WireGuard interface.</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="CopyDetails" xml:space="preserve">
    <value>Copy Details</value>
  </data>
  <data name="UnexpectedErrorMessage" xml:space="preserve">
    <value>The application has encountered an unexpected error.

'{0}'</value>
    <comment>{0} is the exception message</comment>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>Continue</value>
  </data>
  <data name="WireGuardNetworkOnDomain" xml:space="preserve">
      <value>Shared network is on a domain, so there is no need to change the profile of the WireGuard network.</value>
  </data>
</root>